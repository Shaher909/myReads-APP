{"ast":null,"code":"var _jsxFileName = \"/Users/shaherjamaleddin/Documents/Repos/myReads/nd0191-c1-myreads/starter/src/components/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"../BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  books,\n  shelves,\n  updateBooks\n}) => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const updateQuery = query => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (query !== \"\") {\n      const searchBooks = async () => {\n        console.log(query);\n        const res = await BooksAPI.search(query, 20);\n        setResults(res);\n        console.log(res);\n      };\n\n      searchBooks();\n    }\n  }, [query]);\n  const showingResults = results === null || results === void 0 ? void 0 : results.filter(b => b.title.toLowerCase().includes(query.toLowerCase()) || b.authors.some(author => author.toLowerCase().includes(query.toLowerCase())) || b.industryIdentifiers.some(industryIdentifier => industryIdentifier.identifier.toLowerCase().includes(query.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: showingResults.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            shelves: shelves,\n            updateBooks: updateBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 39\n          }, this)\n        }, book.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBooks, \"Ke6tpuAvKY3w5wJbcUctKuyMFNI=\");\n\n_c = SearchBooks;\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/Users/shaherjamaleddin/Documents/Repos/myReads/nd0191-c1-myreads/starter/src/components/SearchBooks.js"],"names":["Link","useState","useEffect","Book","BooksAPI","SearchBooks","books","shelves","updateBooks","results","setResults","query","setQuery","updateQuery","searchBooks","console","log","res","search","showingResults","filter","b","title","toLowerCase","includes","authors","some","author","industryIdentifiers","industryIdentifier","identifier","event","target","value","map","book","name"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Book from \"./Book\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nconst SearchBooks = ( {books, shelves, updateBooks} ) => {\n\n  const [results, setResults] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n    const updateQuery = (query) =>{\n        setQuery(query);\n    }\n\n    useEffect(() => {\n      if (query !== \"\") {\n      const searchBooks = async() => {\n        console.log(query);\n        const res = await BooksAPI.search(query, 20);\n        setResults(res);\n        console.log(res);\n      }\n      searchBooks();\n    }\n    }, [query])\n\n    const showingResults = \n            results?.filter((b) => b.title.toLowerCase().includes(query.toLowerCase()) \n            || b.authors.some(author => author.toLowerCase().includes(query.toLowerCase()))\n            || b.industryIdentifiers.some(industryIdentifier => industryIdentifier.identifier.toLowerCase().includes(query.toLowerCase()))\n            );\n\n    return (\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link className=\"close-search\" to=\"/\">Close</Link>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value={query} \n                onChange={(event)=> updateQuery(event.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n              {\n                showingResults.map((book) => (\n                  <li key={book.name}><Book book={book} shelves={shelves} updateBooks={updateBooks}></Book></li>\n                ))\n              }\n            </ol>\n          </div>\n        </div>\n    );\n}\n\nexport default SearchBooks;\n\n\n"]},"metadata":{},"sourceType":"module"}